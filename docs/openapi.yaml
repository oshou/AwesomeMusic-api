swagger: "2.0"
info:
  title: AwesomeMusic API
  version: alpha
consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
definitions: {}
security: []
host: localhost
paths:
  /v1/health:
    get:
      summary: ヘルスチェック
      operationId: V1Health
      tags:
        - /v1/health
      parameters: []
      responses:
        "200":
          description: OK
  /v1/users:
    get:
      summary: ユーザー一覧
      operationId: V1GetUsers
      tags:
        - /v1/users
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
          examples:
            application/json:
              - id: 1
                name: "John"
              - id: 2
                name: "Paul"
              - id: 3
                name: "Ringo"
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
    post:
      summary: ユーザー登録
      operationId: V1AddUser
      tags:
        - /users
      parameters:
        - in: body
          name: Body
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: "Mike"
      responses:
        "201":
          description: Created
          schema:
            type: object
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
          examples:
            application/json:
              id: 4
              name: "Mike"
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/users/{user_id}:
    get:
      summary: ユーザー参照
      operationId: V1GetUserByID
      tags:
        - /users
      parameters:
        - in: path
          name: user_id
          type: string
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: object
            items:
              properties:
                id:
                  type: integer
                name:
                  type: string
          examples:
            application/json:
              id: 1
              name: "John"
        "400":
          $ref: "#/responses/BadRequest"
        "404":
          $ref: "#/responses/NotFound"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/posts:
    get:
      summary: 投稿一覧
      operationId: V1GetPosts
      tags:
        - /posts
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                title:
                  type: string
                url:
                  type: string
                message:
                  type: string
          examples:
            application/json:
              - id: 1
                user_id: 1
                title: "Jamie Culum 「Mind Trick」"
                url: "https://www.youtube.com/watch?v=7EdcRHpoU2s"
                message: "天気の良い休日にぴったり、掃除中はいつもこれ流してます！"
              - id: 2
                user_id: 1
                title: "WORLD FAMOUS「Sunlight Player」"
                url: "https://www.youtube.com/watch?v=gbx55BK-6_4"
                message: "よくBGMで流しっぱなしにしてます"
              - id: 3
                user_id: 1
                title: "宇多田ヒカル「Time will tell」"
                url: "https://www.youtube.com/watch?v=gbx55BK-6_4"
                message: "シングルでも珠玉の１曲です！"
        "404":
          $ref: "#/responses/NotFound"
        "500":
          $ref: "#/responses/InternalServerError"
    post:
      summary: 投稿追加
      operationId: V1AddPost
      tags:
        - /posts
      parameters:
        - in: body
          name: Body
          schema:
            type: object
            required:
              - user_id
              - title
              - url
              - message
            properties:
              user_id:
                type: integer
                example: 1
              title:
                type: string
                example: "Rage Against the Machine 「Bomb track」"
              url:
                type: string
                example: "https://www.youtube.com/watch?v=gbx55BK-6_4"
              message:
                type: string
                example: "目覚め最悪ですが絶対起きられます！"
      responses:
        "201":
          description: Created
          schema:
            type: object
            items:
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                title:
                  type: string
                url:
                  type: string
                message:
                  type: string
          examples:
            application/json:
              id: 125
              user_id: 1
              title: "Rage Against the Machine 「Bomb track」"
              url: "https://www.youtube.com/watch?v=gbx55BK-6_4"
              message: "目覚め最悪ですが絶対起きられます！"
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/posts/{post_id}:
    get:
      summary: 特定投稿の参照
      operationId: V1GetPostByID
      tags:
        - /posts
      parameters:
        - in: path
          name: post_id
          type: integer
          required: true
      responses:
        "200":
          description: OK
          schema:
            type: object
            items:
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                title:
                  type: string
                url:
                  type: string
                message:
                  type: string
          examples:
            application/json:
              id: 1
              user_id: 1
              title: "Jamie Culum 「Mind Trick」"
              url: "https://www.youtube.com/watch?v=7EdcRHpoU2s"
              message: "天気の良い休日にぴったり、掃除中はいつもこれ流してます！"
        "400":
          $ref: "#/responses/BadRequest"
        "404":
          $ref: "#/responses/NotFound"
        "500":
          $ref: "#/responses/InternalServerError"
    delete:
      summary: 投稿削除
      operationId: V1DeletePostByID
      tags:
        - /posts
      parameters:
        - in: path
          name: post_id
          type: integer
          required: true
      responses:
        "204":
          description: NoContent
        "400":
          $ref: "#/responses/BadRequest"
  /v1/posts/{post_id}/comments:
    get:
      summary: コメント一覧
      operationId: V1GetComments
      tags:
        - /comments
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/responses/BadRequest"
        "404":
          $ref: "#/responses/NotFound"
        "500":
          $ref: "#/responses/InternalServerError"
    post:
      summary: コメント追加
      operationId: V1AddComment
      tags:
        - /comments
      parameters:
        - in: path
          name: post_id
          type: integer
          required: true
        - in: body
          name: Body
          schema:
            type: object
            required:
              - name
            properties:
              user_id:
                type: integer
                example: 1
              comment:
                type: string
                example: "Sample-comment"
      responses:
        "201":
          description: Created
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/posts/{post_id}/comments/{comment_id}:
    get:
      summary: 特定コメント参照
      operationId: V1GetCommentByID
      tags:
        - /comments
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/responses/BadRequest"
        "404":
          $ref: "#/responses/NotFound"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/tags:
    get:
      summary: タグ一覧
      operationId: V1GetTags
      tags:
        - /tags
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
    post:
      summary: タグ追加
      operationId: V1AddTag
      tags:
        - /tags
      parameters:
        - in: body
          name: Body
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: "夏に聞きたい曲"
      responses:
        "201":
          description: Created
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/tags/{tag_id}:
    get:
      summary: 特定タグ参照
      operationId: V1GetTagByID
      tags:
        - /tags
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/responses/BadRequest"
        "500":
          $ref: "#/responses/InternalServerError"
  /v1/search:
    get:
      summary: 検索
      operationId: V1Search
      tags:
        - /search
      responses:
        "200":
          description: OK

responses:
  BadRequest:
    description: Bad Request
    schema:
      type: object
      properties:
        msg:
          type: string
      example:
        msg: リクエストの形式が正しくありません。
  NotFound:
    description: Not Found
    schema:
      type: object
      properties:
        msg:
          type: string
      example:
        msg: ページが見つかりません。
  InternalServerError:
    description: InternalServerError
    schema:
      type: object
      properties:
        msg:
          type: string
      example:
        msg: システム内部エラーが発生しました。

tags:
  - name: /v1/health
  - name: /v1/users
  - name: /v1/posts
  - name: /v1/tags
  - name: /v1/search
