// Code generated by MockGen. DO NOT EDIT.
// Source: health.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIHealthRepository is a mock of IHealthRepository interface
type MockIHealthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIHealthRepositoryMockRecorder
}

// MockIHealthRepositoryMockRecorder is the mock recorder for MockIHealthRepository
type MockIHealthRepositoryMockRecorder struct {
	mock *MockIHealthRepository
}

// NewMockIHealthRepository creates a new mock instance
func NewMockIHealthRepository(ctrl *gomock.Controller) *MockIHealthRepository {
	mock := &MockIHealthRepository{ctrl: ctrl}
	mock.recorder = &MockIHealthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIHealthRepository) EXPECT() *MockIHealthRepositoryMockRecorder {
	return m.recorder
}

// Ping mocks base method
func (m *MockIHealthRepository) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping
func (mr *MockIHealthRepositoryMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockIHealthRepository)(nil).Ping))
}
