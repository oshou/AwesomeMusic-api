// Code generated by MockGen. DO NOT EDIT.
// Source: health.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIHealthUsecase is a mock of IHealthUsecase interface
type MockIHealthUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIHealthUsecaseMockRecorder
}

// MockIHealthUsecaseMockRecorder is the mock recorder for MockIHealthUsecase
type MockIHealthUsecaseMockRecorder struct {
	mock *MockIHealthUsecase
}

// NewMockIHealthUsecase creates a new mock instance
func NewMockIHealthUsecase(ctrl *gomock.Controller) *MockIHealthUsecase {
	mock := &MockIHealthUsecase{ctrl: ctrl}
	mock.recorder = &MockIHealthUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIHealthUsecase) EXPECT() *MockIHealthUsecaseMockRecorder {
	return m.recorder
}

// GetHealth mocks base method
func (m *MockIHealthUsecase) GetHealth() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealth")
	ret0, _ := ret[0].(error)
	return ret0
}

// GetHealth indicates an expected call of GetHealth
func (mr *MockIHealthUsecaseMockRecorder) GetHealth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealth", reflect.TypeOf((*MockIHealthUsecase)(nil).GetHealth))
}
