openapi: 3.0.0
info:
  contact:
    email: adf1985adf@gmail.com
    name: oshou
  description: 音楽サービス AwesomeMusicのWebAPI
  title: AwesomeMusic API
  version: 0.0.1
servers:
- description: Development Server
  url: https://localhost:8080/v1
- description: Production Server
  url: https://path/to/prod/server/v1
paths:
  /users:
    get:
      description: ユーザー一覧を取得
      operationId: GetUsers
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                example:
                - id: 1
                  name: john
                - id: 2
                  name: becky
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
  /posts:
    get:
      description: 投稿一覧を取得
      operationId: getPosts
      parameters:
      - description: ユーザーID
        explode: false
        in: query
        name: user_id
        required: false
        schema:
          type: integer
        style: form
      - description: タグID
        explode: false
        in: query
        name: tag_id
        required: false
        schema:
          type: integer
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                example:
                - id: 1
                  url: https://www.youtube.com/watch?v=gbx55BK-6_4
                  message: 夏に聴きたい1曲
                - id: 2
                  url: https://www.youtube.com/watch?v=gbx55BK-6_4
                  message: 冬にも聴きたい1曲
                items:
                  $ref: '#/components/schemas/Post'
                type: array
          description: OK
    post:
      description: 投稿の新規作成
      operationId: addPost
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
      responses:
        201:
          description: CREATED
  /posts/{post_id}:
    delete:
      description: 特定の投稿の削除
      operationId: deletePost
      parameters:
      - description: 投稿ID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        204:
          description: NO CONTENT
    get:
      description: 特定の投稿の取得
      operationId: getPost
      parameters:
      - description: 投稿ID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              example:
                url: https://www.youtube.com/watch?v=gbx55BK-6_4
                message: 夏に聴きたい1曲
              schema:
                $ref: '#/components/schemas/Post'
          description: OK
  /posts/{post_id}/comments:
    get:
      description: 特定投稿のコメント一覧の取得
      operationId: getComments
      parameters:
      - description: 投稿ID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                example:
                - id: 1
                  comment: 受験勉強中はこれで乗り切りました！
                - id: 2
                  comment: 秋に来日するらしいので絶対ライブ行きます！
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: OK
    post:
      description: 特定投稿へのコメントの追加
      operationId: addComment
      parameters:
      - description: 投稿ID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
      responses:
        201:
          description: CREATED
  /posts/{post_id}/comments/{comment_id}:
    delete:
      description: 特定投稿のコメントの削除
      operationId: deleteComment
      parameters:
      - description: 投稿ID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: コメントID
        explode: false
        in: path
        name: comment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        204:
          description: NO CONTENT
    get:
      description: 特定投稿へのコメントの取得
      operationId: getComment
      parameters:
      - description: 投稿ID
        explode: false
        in: path
        name: post_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: コメントID
        explode: false
        in: path
        name: comment_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              example:
              - comment: 受験勉強中はこれで乗り切りました！
              schema:
                $ref: '#/components/schemas/Comment'
          description: OK
  /tags:
    get:
      description: タグ一覧の取得
      operationId: getTags
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                example:
                - id: 1
                  name: 夏に聴きたい1曲
                - id: 2
                  name: 2019年
                - id: 3
                  name: EDM
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: OK
  /search:
    get:
      description: 検索タイプ別の投稿検索
      operationId: searchByType
      parameters:
      - description: 検索キーワード
        explode: false
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - description: 検索タイプ
        explode: false
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                example:
                - id: 1
                  url: https://www.youtube.com/watch?v=gbx55BK-6_4
                  message: 夏に聴きたい1曲
                - id: 2
                  url: https://www.youtube.com/watch?v=gbx55BK-6_4
                  message: 冬にも聴きたい1曲
                items:
                  $ref: '#/components/schemas/Post'
                type: array
          description: OK
components:
  parameters:
    userIdParam:
      description: ユーザーID
      explode: false
      in: query
      name: user_id
      required: false
      schema:
        type: integer
      style: form
    postIdParam:
      description: 投稿ID
      explode: false
      in: path
      name: post_id
      required: true
      schema:
        format: int64
        type: integer
      style: simple
    tagIdParam:
      description: タグID
      explode: false
      in: query
      name: tag_id
      required: false
      schema:
        type: integer
      style: form
    commentIdParam:
      description: コメントID
      explode: false
      in: path
      name: comment_id
      required: true
      schema:
        format: int64
        type: integer
      style: simple
    queryParam:
      description: 検索キーワード
      explode: false
      in: query
      name: q
      required: true
      schema:
        type: string
      style: form
    typeParam:
      description: 検索タイプ
      explode: false
      in: query
      name: type
      required: true
      schema:
        type: string
      style: form
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    User:
      properties:
        id:
          example: 1
          format: int64
          type: integer
        name:
          example: kawauso
          type: string
      type: object
    Post:
      example:
        id: 1
        message: 受験勉強中はこれに励まされました！
        url: https://www.youtube.com/watch?v=gbx55BK-6_4
      properties:
        id:
          example: 1
          format: int64
          type: integer
        url:
          example: https://www.youtube.com/watch?v=gbx55BK-6_4
          type: string
        message:
          example: 受験勉強中はこれに励まされました！
          type: string
      type: object
    Comment:
      example:
        comment: この曲を聞いて人生が変わりました！
        id: 1
      properties:
        id:
          example: 1
          format: int64
          type: integer
        comment:
          example: この曲を聞いて人生が変わりました！
          type: string
      type: object
    Tag:
      properties:
        id:
          example: 1
          format: int64
          type: integer
        name:
          example: 夏に聴きたい曲
          type: string
      type: object
    inline_object:
      properties:
        url:
          example: https://www.youtube.com/watch?v=gbx55BK-6_4
          type: string
        message:
          example: 受験勉強中はこれに励まされました！
          type: string
      type: object
    inline_object_1:
      example:
      - comment: イントロの入りが最高!歌詞が知りたいかも
      properties:
        comment:
          type: string
      type: object
