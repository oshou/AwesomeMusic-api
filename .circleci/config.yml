version: 2.1
executors:
  default:
    working_directory: /go/src/github.com/oshou/Awesomemusic-api
    docker:
      - image: circleci/golang:latest
commands:
  install_gcloud_sdk:
    steps:
      - run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install google-cloud-sdk
  install_golangci_lint:
    steps:
      - run:
          name: Install golangci-lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.23.8
      - run:
          name: Add Path
          command: echo 'export PATH=$PATH:/go/src/github.com/oshou/Awesomemusic-api/bin' >> $BASH_ENV
      - run:
          name: Reload
          command: source $BASH_ENV
  install_make:
    steps:
      - run:
          name: Update apt
          command: sudo apt-get update
      - run:
          name: Install make
          command: sudo apt-get install make
  auth_gcp:
    steps:
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          name: Authenticate gcloud to push the image
  lint:
    steps:
      - run:
          name: lint
          command: make lint
  test:
    steps:
      - run:
          name: test
          command: make test
  go_mod_download:
    steps:
      - restore_cache:
          name: Restore go modules cache
          keys:
            - go-modules-{{ checksum "go.sum" }}
      - run:
          name: Download Go Module
          command: go mod download
      - save_cache:
          name: Save go modules cache
          key: go-modules-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  deploy_hub:
    steps:
      - run:
          name: Deploy   Docker Registry
          command: make deploy_hub

jobs:
  deploy_prd:
    executor: default
    steps:
      - checkout
      - go_mod_download
      - install_make
      - install_golangci_lint
      - install_gcloud_sdk
      - setup_remote_docker
      - auth_gcp
      - deploy_hub
  lint_test:
    executor: default
    steps:
      - checkout
      - go_mod_download
      - install_make
      - install_golangci_lint
      - lint
      - test

workflows:
  version: 2
  build_deploy:
    jobs:
      - deploy_prd:
          filters:
            branches:
              only: master
      - lint_test:
          filters:
            branches:
              only: develop
      - lint_test:
          filters:
            tags:
              only: ^v\d+\.\d+\.\d+$/
            branches:
              only: feature/ci_test_dummy2
#ab
